/*
 * Copyright 2008 Michal Turek
 *
 * This file is part of Graphal.
 * http://graphal.sourceforge.net/
 *
 * Graphal is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, version 3 of the License.
 *
 * Graphal is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Graphal.  If not, see <http://www.gnu.org/licenses/>.
 */


define("NEW", "0");
define("CLOSED", "1");
define("NEW_COLOR", "255, 0, 0");
define("CLOSED_COLOR", "255, 255, 255");


/////////////////////////////////////////////////////////////////////////////
//// Recursive depth first search

function dfs(v)
{
	if(v.state == CLOSED)
		return;

	breakpoint(true);
	println("Closing vertex: " + v.__id);
	v.visSetColor(CLOSED_COLOR);
	v.state = CLOSED;

	foreach(neighbor; v.getNeighbors())
		dfs(neighbor);
}


/////////////////////////////////////////////////////////////////////////////
////

function main(argv)
{
	g = graph();

	assert(g.loadFromFile("../graphs/02_graph_3_2_3.txt"));
	g.setPropertyToAllVertices("state", NEW);

	vertices = g.getVertices();

	visRegister(vertices, "vertices", NEW_COLOR);
	visRegister(g.getEdges(), "edges", 0, 255, 0);

	if(vertices.hasNext())
		dfs(vertices.next());

	return;
}
