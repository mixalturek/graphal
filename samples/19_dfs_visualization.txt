define("NEW", "0");
define("CLOSED", "1");
define("NEW_COLOR", "255, 0, 0");
define("CLOSED_COLOR", "255, 255, 255");


/////////////////////////////////////////////////////////////////////////////
//// Recursive depth first search

function dfs(v)
{
	if(v.state == CLOSED)
		return;

	breakpoint(true);
	println("Closing vertex: " + v.__id);
	v.visSetColor(CLOSED_COLOR);
	v.state = CLOSED;

	foreach(neighbor; v.getNeighbors())
		dfs(neighbor);
}


/////////////////////////////////////////////////////////////////////////////
////

function main(argv)
{
	g = graph();

	assert(g.loadFromFile("../graphs/02_graph_3_2_3.txt"));
	g.setPropertyToAllVertices("state", NEW);

	vertices = g.getVertices();

	visRegister(vertices, "vertices", NEW_COLOR);
	visRegister(g.getEdges(), "edges", 0, 255, 0);

	if(vertices.hasNext())
		dfs(vertices.next());

	return;
}
