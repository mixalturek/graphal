/*
 * Copyright 2008 Michal Turek
 *
 * This file is part of Graphal.
 * http://graphal.sourceforge.net/
 *
 * Graphal is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, version 3 of the License.
 *
 * Graphal is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Graphal.  If not, see <http://www.gnu.org/licenses/>.
 */


function main(argv)
{
	// Array
	arr = array(5);
	i = 0;

	foreach(var ; arr)
		var = i++;

	println("--- array items ---");
	foreach(var ; arr)
		println(var);

	// Struct
	st = struct();
	st.number = 42;
	st.pi = 3.14;
	st.str = "bagr";

	println("--- struct items ---");
	foreach(var ; st)
		println(var);

	println("--- struct items using iterator ---");
	it = st.iterator();
	while(it.hasNext())
		println(it.next());

	// Graph
	g = graph();

	v1 = g.generateVertex();
	v2 = g.generateVertex();
	v3 = g.generateVertex();
	e1 = g.generateEdge(v1, v2);
	e2 = g.generateEdge(v2, v3);

	v1.color = "red";
	v2.color = "green";
	v3.color = "blue";
	e1.value = 0.5;
	e2.value = 0.4;

	println("--- vertex set ---");
	foreach(var ; g.getVertices())
		println("" + var + ": " + var.color);

	println("--- edge set ---");
	foreach(var ; g.getEdges())
		println("" + var + ": " + var.value);

	println("--- vertex neighbors ---");
	foreach(var ; v2.getNeighbors())
		println("" + var + ": " + var.color);

	foreach(var ; g.getVertices())
		var.state = "new";

	v2.state = "closed";

	println("--- graph dump ---");
	g.dumpGraph();
}

function dumpGraph(g)
{
	println(g);
	foreach(vertex ; g.getVertices())
	{
		println("\t" + vertex);
		foreach(item ; vertex)
			println("\t\t" + item);
	}

	foreach(edge ; g.getEdges())
	{
		println("\t" + edge);
		foreach(item ; edge)
			println("\t\t" + item);
	}
}